{"version":3,"sources":["connectors.js","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["CHAIN_ID","Number","parseInt","process","injected","InjectedConnector","getWindowDimensions","window","width","innerWidth","height","innerHeight","App","triedEager","useWeb3React","activate","active","React","useState","tried","setTried","useEffect","isAuthorized","then","undefined","catch","useEagerConnect","chainId","library","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","ico","account","setICO","providerOrSigner","getSigner","ethers","Contract","ICOAbi","useICO","busdContract","busd","setBUSD","BUSDAbi","useBUSD","suppress","error","ethereum","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","price","setPrice","token","setToken","minSale","setMinSale","r","t","s","busdIntValue","setBusd","eria","setEria","stage","setStage","expectedChainId","parseUnits","e","lessThanMinSale","lt","onClickConnect","connectText","provider","request","method","params","toString","onClickBuy","buyText","intValue","approve","address","tx","wait","buy","openModal","modalIsOpen","setIsOpen","copied","setCopied","copy","a","navigator","clipboard","writeText","customStyles","content","top","left","right","bottom","marginRight","transform","maxWidth","backgroundColor","border","overlay","zIndex","Modal","setAppElement","className","type","placeholder","value","onChange","formatUnits","mul","div","BigNumber","from","pow","onChangeBusd","target","onChangeEria","disabled","onClick","isOpen","onRequestClose","style","contentLabel","borderRadius","paddingTop","paddingBottom","textAlign","substr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","Web3Provider","pollingInterval","document","getElementById"],"mappings":"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","file":"static/js/main.66468f0d.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const CHAIN_ID = Number.parseInt(process.env.REACT_APP_CHAIN_ID);\n\nexport const injected = new InjectedConnector({ });","import {useWeb3React} from \"@web3-react/core\";\nimport React from \"react\";\nimport {CHAIN_ID, injected} from \"./connectors\";\nimport {ethers} from \"ethers\";\nimport {abi as ICOAbi} from \"./contracts/ICO.json\";\nimport {abi as BUSDAbi} from \"./contracts/BUSD.json\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = React.useState(getWindowDimensions());\n\n    React.useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React();\n\n    const [tried, setTried] = React.useState(false);\n\n    React.useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            }\n        });\n    }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    React.useEffect(() => {\n        if (!tried && active) {\n            setTried(true)\n        }\n    }, [tried, active]);\n\n    return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React();\n\n    React.useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleConnect = () => {\n                console.log(\"Handling 'connect' event\");\n                activate(injected);\n            }\n            const handleChainChanged = (chainId) => {\n                console.log(\"Handling 'chainChanged' event with payload\", chainId);\n                activate(injected);\n            }\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n                if (accounts.length > 0) {\n                    activate(injected);\n                }\n            }\n            const handleNetworkChanged = (networkId) => {\n                console.log(\"Handling 'networkChanged' event with payload\", networkId);\n                activate(injected);\n            }\n\n            ethereum.on('connect', handleConnect);\n            ethereum.on('chainChanged', handleChainChanged);\n            ethereum.on('accountsChanged', handleAccountsChanged);\n            ethereum.on('networkChanged', handleNetworkChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('connect', handleConnect);\n                    ethereum.removeListener('chainChanged', handleChainChanged);\n                    ethereum.removeListener('accountsChanged', handleAccountsChanged);\n                    ethereum.removeListener('networkChanged', handleNetworkChanged);\n                }\n            }\n        }\n    }, [active, error, suppress, activate])\n}\n\nexport function useICO() {\n    const { library, account, chainId } = useWeb3React();\n\n    const [ico, setICO] = React.useState(null);\n\n    React.useEffect(() => {\n        if (library && chainId === CHAIN_ID) {\n            let providerOrSigner = library;\n            if (account) {\n                providerOrSigner = library.getSigner(account);\n            }\n\n            setICO(new ethers.Contract(process.env.REACT_APP_ICO_CONTRACT, ICOAbi, providerOrSigner));\n        }\n    }, [library, account, chainId]);\n\n    return ico;\n}\n\nexport function useBUSD() {\n    const { library, account, chainId } = useWeb3React();\n\n    const [busd, setBUSD] = React.useState(null);\n\n    React.useEffect(() => {\n        if (library && chainId === CHAIN_ID) {\n            let providerOrSigner = library;\n            if (account) {\n                providerOrSigner = library.getSigner(account);\n            }\n\n            setBUSD(new ethers.Contract(process.env.REACT_APP_BUSD_CONTRACT, BUSDAbi, providerOrSigner));\n        }\n    }, [library, account, chainId]);\n\n    return busd;\n}","import React from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {useEagerConnect, useICO, useBUSD, useInactiveListener, useWindowDimensions} from \"./hooks\";\nimport {injected} from \"./connectors\";\nimport {formatUnits, parseUnits} from \"@ethersproject/units\";\nimport {BigNumber} from \"ethers\";\nimport Modal from \"react-modal\";\n\nconst shortenAddress = (address) => address.substr(0, 13) + \"...\" + address.substr(-13);\n\nfunction App() {\n    const triedEager = useEagerConnect();\n    const { chainId, active, activate, library } = useWeb3React();\n    const { width } = useWindowDimensions();\n    const ico = useICO();\n    const busdContract = useBUSD();\n    useInactiveListener(!triedEager);\n\n    const [price, setPrice] = React.useState(null);\n    const [token, setToken] = React.useState(null);\n    const [minSale, setMinSale] = React.useState(null);\n\n    React.useEffect(() => {\n        if (ico) {\n            ico.price().then(r => setPrice(r));\n            ico.token().then(t => setToken(t));\n            ico.minSale().then(s => setMinSale(s));\n        }\n    }, [ico]);\n\n    const [busd, setBusd] = React.useState(\"\");\n    const [eria, setEria] = React.useState(\"\");\n    const [stage, setStage] = React.useState(0);\n\n    const onChangeBusd = (value) => {\n        setBusd(value);\n        setStage(0);\n\n        try {\n            const intValue = parseUnits(value);\n            if (intValue && price) {\n                setEria(formatUnits(intValue.mul(price).div(BigNumber.from(10).pow(18))));\n            }\n        } catch(e) {}\n    };\n\n    const onChangeEria = (value) => {\n        setEria(value);\n        setStage(0);\n\n        try {\n            const intValue = parseUnits(value);\n            if (intValue && price) {\n                setBusd(formatUnits(intValue.mul(BigNumber.from(10).pow(18)).div(price)));\n            }\n        } catch(e) {}\n    }\n\n    const expectedChainId = Number.parseInt(process.env.REACT_APP_CHAIN_ID);\n\n    let busdIntValue;\n    try {\n        busdIntValue = parseUnits(busd);\n    } catch(e) {}\n    const lessThanMinSale = minSale && busdIntValue && busdIntValue.lt(minSale);\n\n    let onClickConnect = null;\n    let connectText = \"Connected\";\n    if (!active) {\n        onClickConnect = () => activate(injected);\n        connectText = \"Connect Wallet\";\n    } else if (chainId !== expectedChainId) {\n        onClickConnect = () => library.provider.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [{chainId: expectedChainId.toString(16)}]\n        });\n        connectText = \"Switch to BSC\";\n    }\n\n    let onClickBuy = null;\n    let buyText = \"Approve\";\n    if (stage === 1) {\n        buyText = \"Waiting...\";\n    } else if (stage === 2) {\n        buyText = \"Buy\";\n    }\n    if (active && chainId === expectedChainId && ico && busdContract && busd) {\n        if (lessThanMinSale) {\n            onClickBuy = () => {}\n        } else if (stage === 0) {\n            onClickBuy = () => {\n                try {\n                    const intValue = parseUnits(busd);\n                    busdContract.approve(ico.address, intValue).then(tx => {\n                        setStage(1);\n                        tx.wait().then(() => {\n                            setStage(2);\n                        })\n                    });\n                } catch(e) {}\n            }\n        } else if (stage === 2) {\n            onClickBuy = () => {\n                try {\n                    const intValue = parseUnits(busd);\n                    ico.buy(intValue).then(tx => {\n                        setStage(1);\n                        tx.wait().then(() => {\n                            setStage(0);\n                            openModal();\n                            console.log(\"Purchased\");\n                        })\n                    });\n                } catch(e) {}\n            }\n        }\n    }\n\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    const [copied, setCopied] = React.useState(false);\n\n    const openModal = () => {\n        setIsOpen(true);\n        setCopied(false);\n    };\n\n    const copy = async () => {\n        navigator.clipboard.writeText(token);\n        setCopied(true);\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            width: \"600px\",\n            maxWidth: width ? width - 20 : 600,\n            height: \"300px\",\n            backgroundColor: \"transparent\",\n            border: \"none\",\n        },\n        overlay: {zIndex: 1000}\n    };\n\n    // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n    Modal.setAppElement('#root');\n\n    return (\n        <div className=\"private_sale_block\">\n            <div>\n\n                <div className=\"fourth_buy_inputs\">\n\n                    <div className=\"buy_tokens__input_form\">\n                        <div className=\"buy_tokens__input_box\">\n                            <p className=\"buy_tokens__input_title\">Enter the amount of money</p>\n                            <input type=\"number\" className=\"buy_tokens__input\" placeholder=\"$1\"\n                                   value={busd} onChange={(e) => onChangeBusd(e.target.value)} />\n\n                            {lessThanMinSale && <div className=\"error_min_buy_block\">\n                                <span>Min. Buy: 10 BUSD</span>\n                            </div>}\n                        </div>\n                        <div className=\"buy_tokens__input_box\">\n                            <p className=\"buy_tokens__input_title\">You will receive</p>\n                            <input type=\"number\" className=\"buy_tokens__input\" placeholder=\"25\"\n                                   value={eria} onChange={(e) => onChangeEria(e.target.value)}/>\n                        </div>\n                    </div>\n\n                    <div className=\"tokens_currency__form\">\n                        <div className=\"tokens_currency__input_box\">\n                            <p className=\"tokens_currency__title\">Usdt</p>\n                            <input type=\"number\" disabled className=\"tokens_currency__input\"\n                                   placeholder=\"BUSD\"/>\n                        </div>\n                        <div className=\"tokens_currency__input_box\">\n                            <p className=\"buy_tokens__input_title\">Token</p>\n                            <input type=\"number\" disabled className=\"tokens_currency__input\"\n                                   placeholder=\"ERIA\"/>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"fourth_buy_buttons\">\n                    <div>\n                        <div className=\"buy_button\">\n                            <a className=\"connect_wallet_btn\" onClick={onClickConnect}>\n                                {connectText}\n                            </a>\n                        </div>\n                        <div className=\"buy_button thanks_pop_up\">\n                            <a className=\"buy_token_btn\" onClick={onClickBuy}>\n                                {buyText}\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setIsOpen(false)}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <div className=\"thanks_block_content\" style={{backgroundColor: \"#343a40\", borderRadius: 10, border: \"1px solid #f8f9fa\", paddingTop: 20, paddingBottom: 10}}>\n\n                    <div className=\"thanks_block_title\" style={{textAlign: \"center\"}}>\n                        <div>\n                            <h3>Success!</h3>\n                            <p>\n                                Below is the token details, copy and add to your wallet. <br />\n                                <span>Note:</span> IDO will be held on the Playpad platform on December\n                                14th. Listing on PancakeSwap on December 22nd.\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"token_address_block\">\n                        <input className=\"copy-text textarea\" type=\"text\"\n                               value={token ? shortenAddress(token) : null} />\n                        <button className=\"copy_button\" onClick={copy}>{copied ? \"Copied\" : \"Copy\"}</button>\n                    </div>\n\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\n\n\nfunction getLibrary(provider) {\n    const library = new Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Web3ReactProvider getLibrary={getLibrary}>\n          <App />\n      </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}